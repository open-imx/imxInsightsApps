name: Auto Release GUI on Lib Update

on:
  workflow_dispatch:
  repository_dispatch:

jobs:
  auto-release:
    if: github.event_name == 'workflow_dispatch' || github.event.action == 'trigger-auto-release'
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout GUI Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Configure Git user (required for Hatch commit)
        shell: pwsh
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Bump version (dev)
        id: bump
        shell: pwsh
        run: |
          $NEW_VERSION = hatch version dev
          echo "new_version=$NEW_VERSION" >> $env:GITHUB_OUTPUT
          echo "Bumped to: $NEW_VERSION"

      - name: Sanitize version string
        id: sanitize
        shell: pwsh
        env:
          RAW_VERSION: ${{ steps.bump.outputs.new_version }}
        run: |
          $CLEAN_VERSION = $env:RAW_VERSION -replace '[^0-9A-Za-z._-]', ''
          echo "version=$CLEAN_VERSION" >> $env:GITHUB_OUTPUT

      - name: Create version bump branch and push
        shell: pwsh
        env:
          VERSION: ${{ steps.sanitize.outputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout -b bump-version-$env:VERSION
          git add .
          git commit -m "ðŸ”§ Bump version to $env:VERSION"
          git remote set-url origin https://x-access-token:$env:GH_TOKEN@github.com/${{ github.repository }}.git
          git push origin bump-version-$env:VERSION

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: bump-version-${{ steps.sanitize.outputs.version }}
          title: "ðŸ”§ Bump version to ${{ steps.sanitize.outputs.version }}"
          body: "This PR bumps the version to ${{ steps.sanitize.outputs.version }} after dependency update."
          base: main
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: steps.cpr.outputs.pull-request-url != ''
        shell: pwsh
        env:
          PR_URL: ${{ steps.cpr.outputs.pull-request-url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge "$env:PR_URL" --auto --merge

  wait-for-merge:
    runs-on: ubuntu-latest
    needs: auto-release
    permissions:
      contents: read

    steps:
      - name: Wait for PR to be merged
        uses: juliangruber/sleep-action@v1
        with:
          time: 120s

      - name: Checkout merged main
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: false

      - name: Set up Python again
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install and build
        run: |
          python -m pip install --upgrade pip
          pip install hatch pyinstaller
          hatch run python build-gui-app.py

      - name: Get final version
        id: get_version
        run: |
          VERSION=$(grep -Eo '__version__\s*=\s*"[^"]+"' imxInsightsApps/__init__.py | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          tag: v${{ steps.get_version.outputs.version }}
          name: ðŸš€ Release ${{ steps.get_version.outputs.version }}
          generateReleaseNotes: true
          artifacts: dist/imx-tools-gui-${{ steps.get_version.outputs.version }}-windows.zip
          token: ${{ secrets.FINE_GRAINED_PAT }}
