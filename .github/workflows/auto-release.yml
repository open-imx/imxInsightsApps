name: Auto Release GUI on Lib Update

on:
  workflow_dispatch:

jobs:
  auto-release:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
      id-token: write

    steps:
      - name: Checkout GUI Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Bump version (dev)
        id: bump
        run: |
          NEW_VERSION=$(hatch version dev)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped to: $NEW_VERSION"

      - name: Create version bump branch
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git checkout -b bump-version-${{ steps.bump.outputs.new_version }}
          git commit -am "ðŸ”§ Bump version to ${{ steps.bump.outputs.new_version }}"
          git push origin bump-version-${{ steps.bump.outputs.new_version }}

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: bump-version-${{ steps.bump.outputs.new_version }}
          title: "ðŸ”§ Bump version to ${{ steps.bump.outputs.new_version }}"
          body: "This PR bumps the version to ${{ steps.bump.outputs.new_version }} after dependency update."
          base: main
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        run: gh pr merge ${{ steps.cpr.outputs.pull-request-url }} --auto --merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  wait-for-merge:
    runs-on: ubuntu-latest
    needs: auto-release
    steps:
      - name: Wait for PR to be merged
        uses: juliangruber/sleep-action@v1
        with:
          time: 120s

      - name: Checkout merged main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Python again
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install and build
        run: |
          python -m pip install --upgrade pip
          pip install hatch pyinstaller
          hatch run python build-gui-app.py

      - name: Get final version
        id: get_version
        run: |
          VERSION=$(grep -Eo '__version__\s*=\s*"[^"]+"' imxInsightsApps/__init__.py | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174
        with:
          draft: false
          tag: v${{ steps.get_version.outputs.version }}
          name: ðŸš€ Release ${{ steps.get_version.outputs.version }}
          generateReleaseNotes: true
          artifacts: dist/imx-tools-gui-${{ steps.get_version.outputs.version }}-windows.zip
          token: ${{ secrets.GITHUB_TOKEN }}
