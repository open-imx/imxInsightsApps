name: Pre Release

on:
  push:
    branches:
      - main

jobs:
  test:
    uses: ./.github/workflows/test.yml
    with:
      runs-on: windows-latest
    permissions:
      contents: write
      id-token: write
      actions: write

  pre-release:
    runs-on: windows-latest
    needs: test
    environment: release
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install hatch pyinstaller jq

      - name: Extract and compare versions
        id: version_check
        shell: bash
        run: |
          VERSION=$(grep -Eo '__version__\s*=\s*"[^"]+"' imxInsightsApps/__init__.py | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION"

          LATEST_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name | sed 's/^v//')
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_ENV
          echo "latest_version=$LATEST_VERSION"

          if [ "$VERSION" != "$LATEST_VERSION" ]; then
            echo "should_release=true" >> $GITHUB_ENV
          else
            echo "should_release=false" >> $GITHUB_ENV
          fi

      - name: Build GUI executable
        if: env.should_release == 'true'
        run: hatch run python build-gui-app.py

      - name: Upload pre-release
        if: env.should_release == 'true'
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174
        with:
          draft: true
          name: ðŸš€ Version ${{ env.version }}
          tag: v${{ env.version }}
          generateReleaseNotes: true
          artifacts: |
            dist/imx-tools-gui-${{ env.version }}-windows.zip
          token: ${{ secrets.GITHUB_TOKEN }}
